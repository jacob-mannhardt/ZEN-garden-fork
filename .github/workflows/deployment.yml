name: Deploy to PyPI

on:
  push:
    branches:
      - development_deployment

# Env variables
env:
  CACHE_NUMBER: 0  # increase to reset cache manually

jobs:
  setup-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check Env File
        id: check-env-file
        uses: tj-actions/changed-files@v41
        with:
          files: |
            zen_garden_env_dev.yml

      - name: Set Env
        # trigger if env file change or on schedule
        if: ${{ steps.check-env-file.outputs.any_changed == 'true' || github.event_name == 'schedule' }}
        run: echo "ENV_STATE=env_change" >> $GITHUB_ENV

  build-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

      # setup the conda env
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: zen-garden-dev
        use-mamba: true
      # date for the cache
    - name: Set cache date
      run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      # reset cache if env file changed
    - uses: actions/cache@v3
      with:
        path: "/usr/share/miniconda3/envs/zen-garden"
        key: linux-64-conda-${{ hashFiles('zen_garden_env_dev.yml') }}-${{ env.DATE }}-${{ env.CACHE_NUMBER }}
      id: cache

      # This step is cached in case the env file was not changed
    - name: Update environment
      run: mamba env update -f zen_garden_env_dev.yml
      if: steps.cache.outputs.cache-hit != 'true'

    - name: Install package
      shell: bash -l {0}
      run: pip install -e .

    - name: Build distribution
      shell: bash -l {0}
      run: |
        python -m build

    - name: Publish to TestPyPI
      shell: bash -l {0}
      run: |
        python -m twine upload --skip_existing --repository testpypi dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}